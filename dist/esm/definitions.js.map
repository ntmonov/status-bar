{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAAA,wCAAwC;AAoDxC,MAAM,CAAN,IAAY,KAuBX;AAvBD,WAAY,KAAK;IACf;;;;OAIG;IACH,sBAAa,CAAA;IAEb;;;;OAIG;IACH,wBAAe,CAAA;IAEf;;;;;;OAMG;IACH,4BAAmB,CAAA;AACrB,CAAC,EAvBW,KAAK,KAAL,KAAK,QAuBhB;AAeD,MAAM,CAAN,IAAY,SAwBX;AAxBD,WAAY,SAAS;IACnB;;;;OAIG;IACH,0BAAa,CAAA;IAEb;;;;;;;OAOG;IACH,4BAAe,CAAA;IAEf;;;;OAIG;IACH,0BAAa,CAAA;AACf,CAAC,EAxBW,SAAS,KAAT,SAAS,QAwBpB;AAiID;;;GAGG;AACH,MAAM,CAAC,MAAM,kBAAkB,GAAG,SAAS,CAAC;AAE5C;;;GAGG;AACH,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,CAAC","sourcesContent":["/// <reference types=\"@capacitor/cli\" />\r\n\r\ndeclare module '@capacitor/cli' {\r\n  export interface PluginsConfig {\r\n    /**\r\n     * These config values are available:\r\n     */\r\n    StatusBar?: {\r\n      /**\r\n       * Whether the statusbar is overlaid or not.\r\n       * For applications targeting Android 15, this property has no effect unless\r\n       * the property windowOptOutEdgeToEdgeEnforcement is added to the application layout file.\r\n       * Otherwise, the application assumes always overlays as true.\r\n       * More details in https://developer.android.com/reference/android/R.attr#windowOptOutEdgeToEdgeEnforcement\r\n       *\r\n       * @since 1.0.0\r\n       * @default true\r\n       * @example false\r\n       */\r\n      overlaysWebView?: boolean;\r\n\r\n      /**\r\n       * Style of the text of the status bar.\r\n       *\r\n       * @since 1.0.0\r\n       * @default default\r\n       * @example \"DARK\"\r\n       */\r\n      style?: string;\r\n\r\n      /**\r\n       * Color of the background of the statusbar in hex format, #RRGGBB.\r\n       * Doesn't work if `overlaysWebView` is true.\r\n       *\r\n       * @since 1.0.0\r\n       * @default #000000\r\n       * @example \"#ffffffff\"\r\n       */\r\n      backgroundColor?: string;\r\n    };\r\n  }\r\n}\r\n\r\nexport interface StyleOptions {\r\n  /**\r\n   * Style of the text of the status bar.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  style: Style;\r\n}\r\n\r\nexport enum Style {\r\n  /**\r\n   * Light text for dark backgrounds.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  Dark = 'DARK',\r\n\r\n  /**\r\n   * Dark text for light backgrounds.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  Light = 'LIGHT',\r\n\r\n  /**\r\n   * The style is based on the device appearance.\r\n   * If the device is using Dark mode, the statusbar text will be light.\r\n   * If the device is using Light mode, the statusbar text will be dark.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  Default = 'DEFAULT',\r\n}\r\n\r\nexport interface AnimationOptions {\r\n  /**\r\n   * The type of status bar animation used when showing or hiding.\r\n   *\r\n   * This option is only supported on iOS.\r\n   *\r\n   * @default Animation.Fade\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  animation: Animation;\r\n}\r\n\r\nexport enum Animation {\r\n  /**\r\n   * No animation during show/hide.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  None = 'NONE',\r\n\r\n  /**\r\n   * Slide animation during show/hide.\r\n   * It doesn't work on iOS 15+.\r\n   *\r\n   * @deprecated Use Animation.Fade or Animation.None instead.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  Slide = 'SLIDE',\r\n\r\n  /**\r\n   * Fade animation during show/hide.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  Fade = 'FADE',\r\n}\r\n\r\nexport interface BackgroundColorOptions {\r\n  /**\r\n   * A hex color to which the status bar color is set.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  color: string;\r\n}\r\n\r\nexport interface StatusBarInfo {\r\n  /**\r\n   * Whether the status bar is visible or not.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  visible: boolean;\r\n\r\n  /**\r\n   * The current status bar style.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  style: Style;\r\n\r\n  /**\r\n   * The current status bar color.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  color?: string;\r\n\r\n  /**\r\n   * Whether the statusbar is overlaid or not.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  overlays?: boolean;\r\n}\r\n\r\nexport interface SetOverlaysWebViewOptions {\r\n  /**\r\n   * Whether to overlay the status bar or not.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  overlay: boolean;\r\n}\r\n\r\nexport interface StatusBarPlugin {\r\n  /**\r\n   * Set the current style of the status bar.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  setStyle(options: StyleOptions): Promise<void>;\r\n\r\n  /**\r\n   * Set the background color of the status bar.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  setBackgroundColor(options: BackgroundColorOptions): Promise<void>;\r\n\r\n  /**\r\n   * Show the status bar.\r\n   * On iOS, if the status bar is initially hidden and the initial style is set to\r\n   * `UIStatusBarStyleLightContent`, first show call might present a glitch on the\r\n   * animation showing the text as dark and then transition to light. It's recommended\r\n   * to use `Animation.None` as the animation on the first call.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  show(options?: AnimationOptions): Promise<void>;\r\n\r\n  /**\r\n   * Hide the status bar.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  hide(options?: AnimationOptions): Promise<void>;\r\n\r\n  /**\r\n   * Get info about the current state of the status bar.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  getInfo(): Promise<StatusBarInfo>;\r\n\r\n  /**\r\n   * Set whether or not the status bar should overlay the webview to allow usage\r\n   * of the space underneath it.\r\n   *\r\n   * @since 1.0.0\r\n   */\r\n  setOverlaysWebView(options: SetOverlaysWebViewOptions): Promise<void>;\r\n}\r\n\r\n/**\r\n * @deprecated Use `StyleOptions`.\r\n * @since 1.0.0\r\n */\r\nexport type StatusBarStyleOptions = StyleOptions;\r\n\r\n/**\r\n * @deprecated Use `BackgroundColorOptions`.\r\n * @since 1.0.0\r\n */\r\nexport type StatusBarBackgroundColorOptions = BackgroundColorOptions;\r\n\r\n/**\r\n * @deprecated Use `SetOverlaysWebViewOptions`.\r\n * @since 1.0.0\r\n */\r\nexport type StatusBarOverlaysWebviewOptions = SetOverlaysWebViewOptions;\r\n\r\n/**\r\n * @deprecated Use `StatusBarInfo`.\r\n * @since 1.0.0\r\n */\r\nexport type StatusBarInfoResult = StatusBarInfo;\r\n\r\n/**\r\n * @deprecated Use `AnimationOptions`.\r\n * @since 1.0.0\r\n */\r\nexport type StatusBarAnimationOptions = AnimationOptions;\r\n\r\n/**\r\n * @deprecated Use `Animation`.\r\n * @since 1.0.0\r\n */\r\nexport const StatusBarAnimation = Animation;\r\n\r\n/**\r\n * @deprecated Use `Style`.\r\n * @since 1.0.0\r\n */\r\nexport const StatusBarStyle = Style;\r\n"]}